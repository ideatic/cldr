<?php

declare(strict_types=1);

/**
 * Locale data for 'ms-BN'.
 * Created: Tue, 01 Nov 2022 12:00:29 +0100
 *
 * This file is automatically generated using the data from the Unicode Common Locale Data Repository.
 *
 * Copyright © 1991-2007 Unicode, Inc. All rights reserved.
 * Distributed under the Terms of Use in http://www.unicode.org/copyright.html.
 */
class i18n_Locale_ms_BN_Data extends i18n_Locale
{
    public function __construct()
    {
        // Version 42
        $this->orientation = 'ltr';
        $this->decimalSeparator = ',';
        $this->groupSeparator = '.';
        $this->currencyFormat = '¤%f';
        $this->currencyNegativeFormat = '(¤%f)';
        $this->language = 'ms';
        $this->locale = 'ms-BN';
        $this->firstDayWeek = 1;
        $this->longDate = 'd F Y';
        $this->shortDate = 'j M Y';
        $this->longTime = 'g:i:s A';
        $this->shortTime = 'g:i A';
        $this->dateTime = '%date%, %time%';
        $this->amString = 'PG';
        $this->pmString = 'PTG';
        $this->nameEnglish = 'Malay (Brunei)';
        $this->nameNative = 'Melayu (Brunei)';
    }

    public function months($type = i18n_Locale::TYPE_WIDE): array
    {
        switch ($type) {
            case i18n_Locale::TYPE_ABBREVIATED:
                return [
                    1  => 'Jan',
                    2  => 'Feb',
                    3  => 'Mac',
                    4  => 'Apr',
                    5  => 'Mei',
                    6  => 'Jun',
                    7  => 'Jul',
                    8  => 'Ogo',
                    9  => 'Sep',
                    10 => 'Okt',
                    11 => 'Nov',
                    12 => 'Dis',
                ];
            case i18n_Locale::TYPE_NARROW:
                return [
                    1  => 'J',
                    2  => 'F',
                    3  => 'M',
                    4  => 'A',
                    5  => 'M',
                    6  => 'J',
                    7  => 'J',
                    8  => 'O',
                    9  => 'S',
                    10 => 'O',
                    11 => 'N',
                    12 => 'D',
                ];
            case i18n_Locale::TYPE_WIDE:
                return [
                    1  => 'Januari',
                    2  => 'Februari',
                    3  => 'Mac',
                    4  => 'April',
                    5  => 'Mei',
                    6  => 'Jun',
                    7  => 'Julai',
                    8  => 'Ogos',
                    9  => 'September',
                    10 => 'Oktober',
                    11 => 'November',
                    12 => 'Disember',
                ];
        }
    }

    public function weekDays($type = i18n_Locale::TYPE_WIDE): array
    {
        switch ($type) {
            case i18n_Locale::TYPE_ABBREVIATED:
                return [
                    0 => 'Ahd',
                    1 => 'Isn',
                    2 => 'Sel',
                    3 => 'Rab',
                    4 => 'Kha',
                    5 => 'Jum',
                    6 => 'Sab',
                ];
            case i18n_Locale::TYPE_NARROW:
                return [
                    0 => 'A',
                    1 => 'I',
                    2 => 'S',
                    3 => 'R',
                    4 => 'K',
                    5 => 'J',
                    6 => 'S',
                ];
            case i18n_Locale::TYPE_WIDE:
                return [
                    0 => 'Ahad',
                    1 => 'Isnin',
                    2 => 'Selasa',
                    3 => 'Rabu',
                    4 => 'Khamis',
                    5 => 'Jumaat',
                    6 => 'Sabtu',
                ];
        }
    }

    public function intervals(): array
    {
        return [
            'year'        => '{n, plural, other {# tahun}}',
            'month'       => '{n, plural, other {# bulan}}',
            'week'        => '{n, plural, other {# minggu}}',
            'day'         => '{n, plural, other {# hari}}',
            'hour'        => '{n, plural, other {# j}}',
            'minute'      => '{n, plural, other {# min}}',
            'second'      => '{n, plural, other {# saat}}',
            'millisecond' => '{n, plural, other {# ms}}',
            'microsecond' => '{n, plural, other {# μs}}',
            'nanosecond'  => '{n, plural, other {# ns}}',
        ];
    }

    public function currencies(): array
    {
        return require __DIR__ . DIRECTORY_SEPARATOR . 'Currencies.php';
    }

    public function languages(): array
    {
        return require __DIR__ . DIRECTORY_SEPARATOR . 'Languages.php';
    }

    public function territories(): array
    {
        return require __DIR__ . DIRECTORY_SEPARATOR . 'Territories.php';
    }
}
