<?php

declare(strict_types=1);

/**
 * Locale data for 'tr'.
 * Created: Tue, 01 Nov 2022 12:00:34 +0100
 *
 * This file is automatically generated using the data from the Unicode Common Locale Data Repository.
 *
 * Copyright © 1991-2007 Unicode, Inc. All rights reserved.
 * Distributed under the Terms of Use in http://www.unicode.org/copyright.html.
 */
class i18n_Locale_tr_Data extends i18n_Locale
{
    public function __construct()
    {
        // Version 42
        $this->orientation = 'ltr';
        $this->decimalSeparator = ',';
        $this->groupSeparator = '.';
        $this->currencyFormat = '¤%f';
        $this->currencyNegativeFormat = '(¤%f)';
        $this->language = 'tr';
        $this->locale = 'tr';
        $this->firstDayWeek = 1;
        $this->longDate = 'j F Y';
        $this->shortDate = 'j M Y';
        $this->longTime = 'H:i:s';
        $this->shortTime = 'H:i';
        $this->dateTime = '%date% %time%';
        $this->amString = 'ÖÖ';
        $this->pmString = 'ÖS';
        $this->nameEnglish = 'Turkish';
        $this->nameNative = 'Türkçe';
    }

    public function months($type = i18n_Locale::TYPE_WIDE): array
    {
        switch ($type) {
            case i18n_Locale::TYPE_ABBREVIATED:
                return [
                    1  => 'Oca',
                    2  => 'Şub',
                    3  => 'Mar',
                    4  => 'Nis',
                    5  => 'May',
                    6  => 'Haz',
                    7  => 'Tem',
                    8  => 'Ağu',
                    9  => 'Eyl',
                    10 => 'Eki',
                    11 => 'Kas',
                    12 => 'Ara',
                ];
            case i18n_Locale::TYPE_NARROW:
                return [
                    1  => 'O',
                    2  => 'Ş',
                    3  => 'M',
                    4  => 'N',
                    5  => 'M',
                    6  => 'H',
                    7  => 'T',
                    8  => 'A',
                    9  => 'E',
                    10 => 'E',
                    11 => 'K',
                    12 => 'A',
                ];
            case i18n_Locale::TYPE_WIDE:
                return [
                    1  => 'Ocak',
                    2  => 'Şubat',
                    3  => 'Mart',
                    4  => 'Nisan',
                    5  => 'Mayıs',
                    6  => 'Haziran',
                    7  => 'Temmuz',
                    8  => 'Ağustos',
                    9  => 'Eylül',
                    10 => 'Ekim',
                    11 => 'Kasım',
                    12 => 'Aralık',
                ];
        }
    }

    public function weekDays($type = i18n_Locale::TYPE_WIDE): array
    {
        switch ($type) {
            case i18n_Locale::TYPE_ABBREVIATED:
                return [
                    0 => 'Paz',
                    1 => 'Pzt',
                    2 => 'Sal',
                    3 => 'Çar',
                    4 => 'Per',
                    5 => 'Cum',
                    6 => 'Cmt',
                ];
            case i18n_Locale::TYPE_NARROW:
                return [
                    0 => 'P',
                    1 => 'P',
                    2 => 'S',
                    3 => 'Ç',
                    4 => 'P',
                    5 => 'C',
                    6 => 'C',
                ];
            case i18n_Locale::TYPE_WIDE:
                return [
                    0 => 'Pazar',
                    1 => 'Pazartesi',
                    2 => 'Salı',
                    3 => 'Çarşamba',
                    4 => 'Perşembe',
                    5 => 'Cuma',
                    6 => 'Cumartesi',
                ];
        }
    }

    public function intervals(): array
    {
        return [
            'year'        => '{n, plural, one {# yıl} other {# yıl}}',
            'month'       => '{n, plural, one {# ay} other {# ay}}',
            'week'        => '{n, plural, one {# hafta} other {# hafta}}',
            'day'         => '{n, plural, one {# gün} other {# gün}}',
            'hour'        => '{n, plural, one {# sa.} other {# sa.}}',
            'minute'      => '{n, plural, one {# dk.} other {# dk.}}',
            'second'      => '{n, plural, one {# sn.} other {# sn.}}',
            'millisecond' => '{n, plural, one {# msn} other {# msn}}',
            'microsecond' => '{n, plural, one {# μsn} other {# μsn}}',
            'nanosecond'  => '{n, plural, one {# nsn} other {# nsn}}',
        ];
    }

    public function currencies(): array
    {
        return require __DIR__ . DIRECTORY_SEPARATOR . 'Currencies.php';
    }

    public function languages(): array
    {
        return require __DIR__ . DIRECTORY_SEPARATOR . 'Languages.php';
    }

    public function territories(): array
    {
        return require __DIR__ . DIRECTORY_SEPARATOR . 'Territories.php';
    }
}
