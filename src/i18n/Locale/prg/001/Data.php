<?php

declare(strict_types=1);

/**
 * Locale data for 'prg-001'.
 * Created: Fri, 01 May 2020 17:34:46 +0200
 *
 * This file is automatically generated using the data from the Unicode Common Locale Data Repository.
 *
 * Copyright © 1991-2007 Unicode, Inc. All rights reserved.
 * Distributed under the Terms of Use in http://www.unicode.org/copyright.html.
 */
class i18n_Locale_prg_001_Data extends i18n_Locale
{
    public function __construct()
    {
        // Version 37
        $this->orientation = 'ltr';
        $this->decimalSeparator = ',';
        $this->groupSeparator = ' ';
        $this->currencyFormat = '¤%f';
        $this->currencyNegativeFormat = '(¤%f)';
        $this->language = 'prg';
        $this->locale = 'prg-001';
        $this->firstDayWeek = 1;
        $this->longDate = 'Y \\m\\e\\t\\t\\a\\s j. F';
        $this->shortDate = 'd.m \\s\\t. Y';
        $this->longTime = 'H:i:s';
        $this->shortTime = 'H:i';
        $this->dateTime = '%date% %time%';
        $this->amString = 'ankstāinan';
        $this->pmString = 'pa pussideinan';
        $this->nameEnglish = 'English';
        $this->nameNative = 'English';
    }

    public function months($type = i18n_Locale::TYPE_WIDE)
    {
        switch ($type) {
            case i18n_Locale::TYPE_ABBREVIATED:
                return [
                    1  => 'Rag',
                    2  => 'Was',
                    3  => 'Pūl',
                    4  => 'Sak',
                    5  => 'Zal',
                    6  => 'Sīm',
                    7  => 'Līp',
                    8  => 'Dag',
                    9  => 'Sil',
                    10 => 'Spa',
                    11 => 'Lap',
                    12 => 'Sal',
                ];
            case i18n_Locale::TYPE_NARROW:
                return [
                    1  => 'R',
                    2  => 'W',
                    3  => 'P',
                    4  => 'S',
                    5  => 'Z',
                    6  => 'S',
                    7  => 'L',
                    8  => 'D',
                    9  => 'S',
                    10 => 'S',
                    11 => 'L',
                    12 => 'S',
                ];
            case i18n_Locale::TYPE_WIDE:
                return [
                    1  => 'Rags',
                    2  => 'Wassarins',
                    3  => 'Pūlis',
                    4  => 'Sakkis',
                    5  => 'Zallaws',
                    6  => 'Sīmenis',
                    7  => 'Līpa',
                    8  => 'Daggis',
                    9  => 'Sillins',
                    10 => 'Spallins',
                    11 => 'Lapkrūtis',
                    12 => 'Sallaws',
                ];
        }
    }

    public function weekDays($type = i18n_Locale::TYPE_WIDE)
    {
        switch ($type) {
            case i18n_Locale::TYPE_ABBREVIATED:
                return [
                    0 => 'Nad',
                    1 => 'Pan',
                    2 => 'Wis',
                    3 => 'Pus',
                    4 => 'Ket',
                    5 => 'Pēn',
                    6 => 'Sab',
                ];
            case i18n_Locale::TYPE_NARROW:
                return [
                    0 => 'N',
                    1 => 'P',
                    2 => 'W',
                    3 => 'P',
                    4 => 'K',
                    5 => 'P',
                    6 => 'S',
                ];
            case i18n_Locale::TYPE_WIDE:
                return [
                    0 => 'Nadīli',
                    1 => 'Panadīli',
                    2 => 'Wisasīdis',
                    3 => 'Pussisawaiti',
                    4 => 'Ketwirtiks',
                    5 => 'Pēntniks',
                    6 => 'Sabattika',
                ];
        }
    }

    public function intervals()
    {
        return [
            'year'        => '{n, plural, one {# year} other {# years}}',
            'month'       => '{n, plural, one {# month} other {# months}}',
            'week'        => '{n, plural, one {# week} other {# weeks}}',
            'day'         => '{n, plural, one {# day} other {# days}}',
            'hour'        => '{n, plural, one {# hr} other {# hr}}',
            'minute'      => '{n, plural, one {# min} other {# min}}',
            'second'      => '{n, plural, one {# sec} other {# sec}}',
            'millisecond' => '{n, plural, one {# ms} other {# ms}}',
            'microsecond' => '{n, plural, one {# µs} other {# µs}}',
            'nanosecond'  => '{n, plural, one {# ns} other {# ns}}',
        ];
    }

    public function currencies()
    {
        return require __DIR__ . DIRECTORY_SEPARATOR . 'Currencies.php';
    }

    public function languages()
    {
        return require __DIR__ . DIRECTORY_SEPARATOR . 'Languages.php';
    }

    public function territories(): array
    {
        return require __DIR__ . DIRECTORY_SEPARATOR . 'Territories.php';
    }
}
