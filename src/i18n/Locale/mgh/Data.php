<?php

declare(strict_types=1);

/**
 * Locale data for 'mgh'.
 * Created: Tue, 01 Nov 2022 12:00:28 +0100
 *
 * This file is automatically generated using the data from the Unicode Common Locale Data Repository.
 *
 * Copyright © 1991-2007 Unicode, Inc. All rights reserved.
 * Distributed under the Terms of Use in http://www.unicode.org/copyright.html.
 */
class i18n_Locale_mgh_Data extends i18n_Locale
{
    public function __construct()
    {
        // Version 42
        $this->orientation = 'ltr';
        $this->decimalSeparator = ',';
        $this->groupSeparator = '.';
        $this->currencyFormat = '¤%f';
        $this->currencyNegativeFormat = '(¤%f)';
        $this->language = 'mgh';
        $this->locale = 'mgh';
        $this->firstDayWeek = 1;
        $this->longDate = 'j F Y';
        $this->shortDate = 'j M Y';
        $this->longTime = 'H:i:s';
        $this->shortTime = 'H:i';
        $this->dateTime = '%date%, %time%';
        $this->amString = 'wichishu';
        $this->pmString = 'mchochil’l';
        $this->nameEnglish = 'English';
        $this->nameNative = 'English';
    }

    public function months($type = i18n_Locale::TYPE_WIDE): array
    {
        switch ($type) {
            case i18n_Locale::TYPE_NARROW:
                return [
                    1  => 'K',
                    2  => 'U',
                    3  => 'R',
                    4  => 'C',
                    5  => 'T',
                    6  => 'M',
                    7  => 'S',
                    8  => 'N',
                    9  => 'T',
                    10 => 'K',
                    11 => 'M',
                    12 => 'Y',
                ];
            case i18n_Locale::TYPE_ABBREVIATED:
                return [
                    1  => 'Kwa',
                    2  => 'Una',
                    3  => 'Rar',
                    4  => 'Che',
                    5  => 'Tha',
                    6  => 'Moc',
                    7  => 'Sab',
                    8  => 'Nan',
                    9  => 'Tis',
                    10 => 'Kum',
                    11 => 'Moj',
                    12 => 'Yel',
                ];
            case i18n_Locale::TYPE_WIDE:
                return [
                    1  => 'Mweri wo kwanza',
                    2  => 'Mweri wo unayeli',
                    3  => 'Mweri wo uneraru',
                    4  => 'Mweri wo unecheshe',
                    5  => 'Mweri wo unethanu',
                    6  => 'Mweri wo thanu na mocha',
                    7  => 'Mweri wo saba',
                    8  => 'Mweri wo nane',
                    9  => 'Mweri wo tisa',
                    10 => 'Mweri wo kumi',
                    11 => 'Mweri wo kumi na moja',
                    12 => 'Mweri wo kumi na yel’li',
                ];
        }
    }

    public function weekDays($type = i18n_Locale::TYPE_WIDE): array
    {
        switch ($type) {
            case i18n_Locale::TYPE_NARROW:
                return [
                    0 => 'S',
                    1 => 'J',
                    2 => 'J',
                    3 => 'J',
                    4 => 'A',
                    5 => 'I',
                    6 => 'J',
                ];
            case i18n_Locale::TYPE_ABBREVIATED:
                return [
                    0 => 'Sab',
                    1 => 'Jtt',
                    2 => 'Jnn',
                    3 => 'Jtn',
                    4 => 'Ara',
                    5 => 'Iju',
                    6 => 'Jmo',
                ];
            case i18n_Locale::TYPE_WIDE:
                return [
                    0 => 'Sabato',
                    1 => 'Jumatatu',
                    2 => 'Jumanne',
                    3 => 'Jumatano',
                    4 => 'Arahamisi',
                    5 => 'Ijumaa',
                    6 => 'Jumamosi',
                ];
        }
    }

    public function intervals(): array
    {
        return [
            'year'        => '{n, plural, one {# year} other {# years}}',
            'month'       => '{n, plural, one {# month} other {# months}}',
            'week'        => '{n, plural, one {# week} other {# weeks}}',
            'day'         => '{n, plural, one {# day} other {# days}}',
            'hour'        => '{n, plural, one {# hr} other {# hr}}',
            'minute'      => '{n, plural, one {# min} other {# min}}',
            'second'      => '{n, plural, one {# sec} other {# sec}}',
            'millisecond' => '{n, plural, one {# ms} other {# ms}}',
            'microsecond' => '{n, plural, one {# μs} other {# μs}}',
            'nanosecond'  => '{n, plural, one {# ns} other {# ns}}',
        ];
    }

    public function currencies(): array
    {
        return require __DIR__ . DIRECTORY_SEPARATOR . 'Currencies.php';
    }

    public function languages(): array
    {
        return require __DIR__ . DIRECTORY_SEPARATOR . 'Languages.php';
    }

    public function territories(): array
    {
        return require __DIR__ . DIRECTORY_SEPARATOR . 'Territories.php';
    }
}
