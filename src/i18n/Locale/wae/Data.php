<?php
declare(strict_types=1);

/**
 * Locale data for 'wae'.
 * Created: Sun, 22 Nov 2020 20:22:00 +0100
 *
 * This file is automatically generated using the data from the Unicode Common Locale Data Repository.
 *
 * Copyright © 1991-2007 Unicode, Inc. All rights reserved.
 * Distributed under the Terms of Use in http://www.unicode.org/copyright.html.
 */
class i18n_Locale_wae_Data extends i18n_Locale
{
    public function __construct() {
        // Version 38
        $this->orientation = 'ltr';
        $this->decimalSeparator = ',';
        $this->groupSeparator = '’';
        $this->currencyFormat = '¤%f';
        $this->currencyNegativeFormat = '(¤%f)';
        $this->language = 'wae';
        $this->locale = 'wae';
        $this->firstDayWeek = 1;
        $this->longDate = 'j. F Y';
        $this->shortDate = 'j. M Y';
        $this->longTime = 'g:i:s A';
        $this->shortTime = 'g:i A';
        $this->dateTime = '%date%, %time%';
        $this->amString = 'AM';
        $this->pmString = 'PM';
        $this->nameEnglish = 'English';
        $this->nameNative = 'English';
    }
        
    public function months($type = i18n_Locale::TYPE_WIDE): array{
        switch($type) {
            case i18n_Locale::TYPE_ABBREVIATED:
                return array (
                      1 => 'Jen',
                      2 => 'Hor',
                      3 => 'Mär',
                      4 => 'Abr',
                      5 => 'Mei',
                      6 => 'Brá',
                      7 => 'Hei',
                      8 => 'Öig',
                      9 => 'Her',
                      10 => 'Wím',
                      11 => 'Win',
                      12 => 'Chr',
                    );
            case i18n_Locale::TYPE_NARROW:
                return array (
                      1 => 'J',
                      2 => 'H',
                      3 => 'M',
                      4 => 'A',
                      5 => 'M',
                      6 => 'B',
                      7 => 'H',
                      8 => 'Ö',
                      9 => 'H',
                      10 => 'W',
                      11 => 'W',
                      12 => 'C',
                    );
            case i18n_Locale::TYPE_WIDE:
                return array (
                      1 => 'Jenner',
                      2 => 'Hornig',
                      3 => 'Märze',
                      4 => 'Abrille',
                      5 => 'Meije',
                      6 => 'Bráčet',
                      7 => 'Heiwet',
                      8 => 'Öigšte',
                      9 => 'Herbštmánet',
                      10 => 'Wímánet',
                      11 => 'Wintermánet',
                      12 => 'Chrištmánet',
                    );
        }
    }

        public function weekDays($type = i18n_Locale::TYPE_WIDE): array{
        switch($type) {
            case i18n_Locale::TYPE_ABBREVIATED:
                return array (
                      0 => 'Sun',
                      1 => 'Män',
                      2 => 'Ziš',
                      3 => 'Mit',
                      4 => 'Fró',
                      5 => 'Fri',
                      6 => 'Sam',
                    );
            case i18n_Locale::TYPE_NARROW:
                return array (
                      0 => 'S',
                      1 => 'M',
                      2 => 'Z',
                      3 => 'M',
                      4 => 'F',
                      5 => 'F',
                      6 => 'S',
                    );
            case i18n_Locale::TYPE_WIDE:
                return array (
                      0 => 'Sunntag',
                      1 => 'Mäntag',
                      2 => 'Zištag',
                      3 => 'Mittwuč',
                      4 => 'Fróntag',
                      5 => 'Fritag',
                      6 => 'Samštag',
                    );
        }
    }

        public function intervals(): array{
                    return array (
              'year' => '{n, plural, one {# jár} other {# jár}}',
              'month' => '{n, plural, one {# mánet} other {# mánet}}',
              'week' => '{n, plural, one {# wuča} other {# wučä}}',
              'day' => '{n, plural, one {# täg} other {# täg}}',
              'hour' => '{n, plural, one {# hr} other {# hr}}',
              'minute' => '{n, plural, one {# min} other {# min}}',
              'second' => '{n, plural, one {# sec} other {# sec}}',
              'millisecond' => '{n, plural, one {# ms} other {# ms}}',
              'microsecond' => '{n, plural, one {# µs} other {# µs}}',
              'nanosecond' => '{n, plural, one {# ns} other {# ns}}',
            );
                }

        public function currencies(): array{
                   return require __DIR__ . DIRECTORY_SEPARATOR . 'Currencies.php';
                }

        public function languages(): array{
                   return require __DIR__ . DIRECTORY_SEPARATOR . 'Languages.php';
                }

        public function territories(): array{
                   return require __DIR__ . DIRECTORY_SEPARATOR . 'Territories.php';
                }
}
