<?php

declare(strict_types=1);

/**
 * Locale data for 'yrl'.
 * Created: Tue, 01 Nov 2022 12:00:36 +0100
 *
 * This file is automatically generated using the data from the Unicode Common Locale Data Repository.
 *
 * Copyright © 1991-2007 Unicode, Inc. All rights reserved.
 * Distributed under the Terms of Use in http://www.unicode.org/copyright.html.
 */
class i18n_Locale_yrl_Data extends i18n_Locale
{
    public function __construct()
    {
        // Version 42
        $this->orientation = 'ltr';
        $this->decimalSeparator = ',';
        $this->groupSeparator = '.';
        $this->currencyFormat = '¤ %f';
        $this->currencyNegativeFormat = '¤ %f';
        $this->language = 'yrl';
        $this->locale = 'yrl';
        $this->firstDayWeek = 1;
        $this->longDate = 'j F Y';
        $this->shortDate = 'j M Y';
        $this->longTime = 'H:i:s';
        $this->shortTime = 'H:i';
        $this->dateTime = '%date% %time%';
        $this->amString = 'AM';
        $this->pmString = 'PM';
        $this->nameEnglish = 'English';
        $this->nameNative = 'English';
    }

    public function months($type = i18n_Locale::TYPE_WIDE): array
    {
        switch ($type) {
            case i18n_Locale::TYPE_ABBREVIATED:
                return [
                    1  => 'Ye',
                    2  => 'Mk',
                    3  => 'Ms',
                    4  => 'Id',
                    5  => 'Pu',
                    6  => 'Py',
                    7  => 'Pm',
                    8  => 'Ps',
                    9  => 'Pi',
                    10 => 'Yp',
                    11 => 'Yy',
                    12 => 'Ym',
                ];
            case i18n_Locale::TYPE_NARROW:
                return [
                    1  => 'Y',
                    2  => 'M',
                    3  => 'M',
                    4  => 'I',
                    5  => 'P',
                    6  => 'P',
                    7  => 'P',
                    8  => 'P',
                    9  => 'P',
                    10 => 'Y',
                    11 => 'Y',
                    12 => 'Y',
                ];
            case i18n_Locale::TYPE_WIDE:
                return [
                    1  => 'Yepé',
                    2  => 'Mukũi',
                    3  => 'Musapíri',
                    4  => 'Irũdí',
                    5  => 'Pú',
                    6  => 'Pú-yepé',
                    7  => 'Pú-mukũi',
                    8  => 'Pú-musapíri',
                    9  => 'Pú-irũdí',
                    10 => 'Yepé-putimaã',
                    11 => 'Yepé-yepé',
                    12 => 'Yepé-mukũi',
                ];
        }
    }

    public function weekDays($type = i18n_Locale::TYPE_WIDE): array
    {
        switch ($type) {
            case i18n_Locale::TYPE_NARROW:
                return [
                    0 => 'M',
                    1 => 'M',
                    2 => 'M',
                    3 => 'M',
                    4 => 'S',
                    5 => 'Y',
                    6 => 'S',
                ];
            case i18n_Locale::TYPE_WIDE:
                return [
                    0 => 'Mituú',
                    1 => 'Murakipí',
                    2 => 'Murakí-mukũi',
                    3 => 'Murakí-musapíri',
                    4 => 'Supapá',
                    5 => 'Yukuakú',
                    6 => 'Saurú',
                ];
            case i18n_Locale::TYPE_ABBREVIATED:
                return [
                    0 => 'Mit',
                    1 => 'Mur',
                    2 => 'Mmk',
                    3 => 'Mms',
                    4 => 'Sup',
                    5 => 'Yuk',
                    6 => 'Sau',
                ];
        }
    }

    public function intervals(): array
    {
        return [
            'year'        => '{n, plural, one {# akayú} other {# akayú-ita}}',
            'month'       => '{n, plural, one {# yasí} other {# yasí-ita}}',
            'week'        => '{n, plural, one {# sẽmãna} other {# sẽmãna-ita}}',
            'day'         => '{n, plural, one {# ara} other {# ara-ita}}',
            'second'      => '{n, plural, one {# seg} other {# seg}}',
            'hour'        => '{n, plural, one {# hr} other {# hr}}',
            'minute'      => '{n, plural, one {# min} other {# min}}',
            'millisecond' => '{n, plural, one {# ms} other {# ms}}',
            'microsecond' => '{n, plural, one {# μs} other {# μs}}',
            'nanosecond'  => '{n, plural, one {# ns} other {# ns}}',
        ];
    }

    public function currencies(): array
    {
        return require __DIR__ . DIRECTORY_SEPARATOR . 'Currencies.php';
    }

    public function languages(): array
    {
        return require __DIR__ . DIRECTORY_SEPARATOR . 'Languages.php';
    }

    public function territories(): array
    {
        return require __DIR__ . DIRECTORY_SEPARATOR . 'Territories.php';
    }
}
