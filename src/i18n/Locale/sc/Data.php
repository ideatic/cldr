<?php

declare(strict_types=1);

/**
 * Locale data for 'sc'.
 * Created: Tue, 01 Nov 2022 12:00:32 +0100
 *
 * This file is automatically generated using the data from the Unicode Common Locale Data Repository.
 *
 * Copyright © 1991-2007 Unicode, Inc. All rights reserved.
 * Distributed under the Terms of Use in http://www.unicode.org/copyright.html.
 */
class i18n_Locale_sc_Data extends i18n_Locale
{
    public function __construct()
    {
        // Version 42
        $this->orientation = 'ltr';
        $this->decimalSeparator = ',';
        $this->groupSeparator = '.';
        $this->currencyFormat = '%f ¤';
        $this->currencyNegativeFormat = '%f ¤';
        $this->language = 'sc';
        $this->locale = 'sc';
        $this->firstDayWeek = 1;
        $this->longDate = 'j \\d\\e F \\d\\e \\s\\u Y';
        $this->shortDate = 'j \\d\\e M Y';
        $this->longTime = 'H:i:s';
        $this->shortTime = 'H:i';
        $this->dateTime = '%date%, %time%';
        $this->amString = 'AM';
        $this->pmString = 'PM';
        $this->nameEnglish = 'Sardinian';
        $this->nameNative = 'Sardu';
    }

    public function months($type = i18n_Locale::TYPE_WIDE): array
    {
        switch ($type) {
            case i18n_Locale::TYPE_ABBREVIATED:
                return [
                    1  => 'Ghe',
                    2  => 'Fre',
                    3  => 'Mar',
                    4  => 'Abr',
                    5  => 'Maj',
                    6  => 'Làm',
                    7  => 'Trì',
                    8  => 'Aus',
                    9  => 'Cab',
                    10 => 'StG',
                    11 => 'StA',
                    12 => 'Nad',
                ];
            case i18n_Locale::TYPE_NARROW:
                return [
                    1  => 'G',
                    2  => 'F',
                    3  => 'M',
                    4  => 'A',
                    5  => 'M',
                    6  => 'L',
                    7  => 'T',
                    8  => 'A',
                    9  => 'C',
                    10 => 'S',
                    11 => 'S',
                    12 => 'N',
                ];
            case i18n_Locale::TYPE_WIDE:
                return [
                    1  => 'Ghennàrgiu',
                    2  => 'Freàrgiu',
                    3  => 'Martzu',
                    4  => 'Abrile',
                    5  => 'Maju',
                    6  => 'Làmpadas',
                    7  => 'Trìulas',
                    8  => 'Austu',
                    9  => 'Cabudanni',
                    10 => 'Santugaine',
                    11 => 'Santandria',
                    12 => 'Nadale',
                ];
        }
    }

    public function weekDays($type = i18n_Locale::TYPE_WIDE): array
    {
        switch ($type) {
            case i18n_Locale::TYPE_ABBREVIATED:
                return [
                    0 => 'Dom',
                    1 => 'Lun',
                    2 => 'Mar',
                    3 => 'Mèr',
                    4 => 'Giò',
                    5 => 'Che',
                    6 => 'Sàb',
                ];
            case i18n_Locale::TYPE_NARROW:
                return [
                    0 => 'D',
                    1 => 'L',
                    2 => 'M',
                    3 => 'M',
                    4 => 'G',
                    5 => 'C',
                    6 => 'S',
                ];
            case i18n_Locale::TYPE_WIDE:
                return [
                    0 => 'Domìniga',
                    1 => 'Lunis',
                    2 => 'Martis',
                    3 => 'Mèrcuris',
                    4 => 'Giòbia',
                    5 => 'Chenàbura',
                    6 => 'Sàbadu',
                ];
        }
    }

    public function intervals(): array
    {
        return [
            'year'        => '{n, plural, one {# annu} other {# annos}}',
            'month'       => '{n, plural, one {# mese} other {# meses}}',
            'week'        => '{n, plural, one {# chida} other {# chidas}}',
            'day'         => '{n, plural, one {# die} other {# dies}}',
            'hour'        => '{n, plural, one {# ora} other {# oras}}',
            'second'      => '{n, plural, one {# seg} other {# seg}}',
            'microsecond' => '{n, plural, one {#μs} other {#μs}}',
            'nanosecond'  => '{n, plural, one {#ns} other {#ns}}',
            'minute'      => '{n, plural, one {# min} other {# min}}',
            'millisecond' => '{n, plural, one {# ms} other {# ms}}',
        ];
    }

    public function currencies(): array
    {
        return require __DIR__ . DIRECTORY_SEPARATOR . 'Currencies.php';
    }

    public function languages(): array
    {
        return require __DIR__ . DIRECTORY_SEPARATOR . 'Languages.php';
    }

    public function territories(): array
    {
        return require __DIR__ . DIRECTORY_SEPARATOR . 'Territories.php';
    }
}
