<?php

declare(strict_types=1);

/**
 * Locale data for 'shi-Latn'.
 * Created: Tue, 01 Nov 2022 12:00:32 +0100
 *
 * This file is automatically generated using the data from the Unicode Common Locale Data Repository.
 *
 * Copyright © 1991-2007 Unicode, Inc. All rights reserved.
 * Distributed under the Terms of Use in http://www.unicode.org/copyright.html.
 */
class i18n_Locale_shi_Latn_Data extends i18n_Locale
{
    public function __construct()
    {
        // Version 42
        $this->orientation = 'ltr';
        $this->decimalSeparator = ',';
        $this->groupSeparator = ' ';
        $this->currencyFormat = '¤%f';
        $this->currencyNegativeFormat = '(¤%f)';
        $this->language = 'shi';
        $this->locale = 'shi-Latn';
        $this->firstDayWeek = 1;
        $this->longDate = 'j F Y';
        $this->shortDate = 'j M, Y';
        $this->longTime = 'g:i:s A';
        $this->shortTime = 'g:i A';
        $this->dateTime = '%date%, %time%';
        $this->amString = 'tifawt';
        $this->pmString = 'tadggʷat';
        $this->nameEnglish = 'English';
        $this->nameNative = 'English';
    }

    public function months($type = i18n_Locale::TYPE_WIDE): array
    {
        switch ($type) {
            case i18n_Locale::TYPE_NARROW:
                return [
                    1  => 'I',
                    2  => 'B',
                    3  => 'M',
                    4  => 'I',
                    5  => 'M',
                    6  => 'Y',
                    7  => 'Y',
                    8  => 'ɣ',
                    9  => 'C',
                    10 => 'K',
                    11 => 'N',
                    12 => 'D',
                ];
            case i18n_Locale::TYPE_ABBREVIATED:
                return [
                    1  => 'Inn',
                    2  => 'Bṛa',
                    3  => 'Maṛ',
                    4  => 'Ibr',
                    5  => 'May',
                    6  => 'Yun',
                    7  => 'Yul',
                    8  => 'ɣuc',
                    9  => 'Cut',
                    10 => 'Ktu',
                    11 => 'Nuw',
                    12 => 'Duj',
                ];
            case i18n_Locale::TYPE_WIDE:
                return [
                    1  => 'Innayr',
                    2  => 'Bṛayṛ',
                    3  => 'Maṛṣ',
                    4  => 'Ibrir',
                    5  => 'Mayyu',
                    6  => 'Yunyu',
                    7  => 'Yulyuz',
                    8  => 'ɣuct',
                    9  => 'Cutanbir',
                    10 => 'Ktubr',
                    11 => 'Nuwanbir',
                    12 => 'Dujanbir',
                ];
        }
    }

    public function weekDays($type = i18n_Locale::TYPE_WIDE): array
    {
        switch ($type) {
            case i18n_Locale::TYPE_ABBREVIATED:
                return [
                    0 => 'Asa',
                    1 => 'Ayn',
                    2 => 'Asi',
                    3 => 'Akṛ',
                    4 => 'Akw',
                    5 => 'Asim',
                    6 => 'Asiḍ',
                ];
            case i18n_Locale::TYPE_WIDE:
                return [
                    0 => 'Asamas',
                    1 => 'Aynas',
                    2 => 'Asinas',
                    3 => 'Akṛas',
                    4 => 'Akwas',
                    5 => 'Asimwas',
                    6 => 'Asiḍyas',
                ];
            case i18n_Locale::TYPE_NARROW:
                return [
                    0 => 'S',
                    1 => 'M',
                    2 => 'T',
                    3 => 'W',
                    4 => 'T',
                    5 => 'F',
                    6 => 'S',
                ];
        }
    }

    public function intervals(): array
    {
        return [
            'year'        => '{n, plural, one {# year} other {# years}}',
            'month'       => '{n, plural, one {# month} other {# months}}',
            'week'        => '{n, plural, one {# week} other {# weeks}}',
            'day'         => '{n, plural, one {# day} other {# days}}',
            'hour'        => '{n, plural, one {# hr} other {# hr}}',
            'minute'      => '{n, plural, one {# min} other {# min}}',
            'second'      => '{n, plural, one {# sec} other {# sec}}',
            'millisecond' => '{n, plural, one {# ms} other {# ms}}',
            'microsecond' => '{n, plural, one {# μs} other {# μs}}',
            'nanosecond'  => '{n, plural, one {# ns} other {# ns}}',
        ];
    }

    public function currencies(): array
    {
        return require __DIR__ . DIRECTORY_SEPARATOR . 'Currencies.php';
    }

    public function languages(): array
    {
        return require __DIR__ . DIRECTORY_SEPARATOR . 'Languages.php';
    }

    public function territories(): array
    {
        return require __DIR__ . DIRECTORY_SEPARATOR . 'Territories.php';
    }
}
