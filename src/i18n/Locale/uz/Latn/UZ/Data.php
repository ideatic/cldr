<?php
declare(strict_types=1);

/**
 * Locale data for 'uz-Latn-UZ'.
 * Created: Sun, 22 Nov 2020 20:21:59 +0100
 *
 * This file is automatically generated using the data from the Unicode Common Locale Data Repository.
 *
 * Copyright © 1991-2007 Unicode, Inc. All rights reserved.
 * Distributed under the Terms of Use in http://www.unicode.org/copyright.html.
 */
class i18n_Locale_uz_Latn_UZ_Data extends i18n_Locale
{
    public function __construct() {
        // Version 38
        $this->orientation = 'ltr';
        $this->decimalSeparator = ',';
        $this->groupSeparator = ' ';
        $this->currencyFormat = '%f ¤';
        $this->currencyNegativeFormat = '%f ¤';
        $this->language = 'uz';
        $this->locale = 'uz-Latn-UZ';
        $this->firstDayWeek = 1;
        $this->longDate = 'j-F, Y';
        $this->shortDate = 'j-M, Y';
        $this->longTime = 'H:i:s';
        $this->shortTime = 'H:i';
        $this->dateTime = '%date%, %time%';
        $this->amString = 'TO';
        $this->pmString = 'TK';
        $this->nameEnglish = 'Uzbek';
        $this->nameNative = 'O‘zbek';
    }
        
    public function months($type = i18n_Locale::TYPE_WIDE): array{
        switch($type) {
            case i18n_Locale::TYPE_ABBREVIATED:
                return array (
                      1 => 'Yan',
                      2 => 'Fev',
                      3 => 'Mar',
                      4 => 'Apr',
                      5 => 'May',
                      6 => 'Iyn',
                      7 => 'Iyl',
                      8 => 'Avg',
                      9 => 'Sen',
                      10 => 'Okt',
                      11 => 'Noy',
                      12 => 'Dek',
                    );
            case i18n_Locale::TYPE_NARROW:
                return array (
                      1 => 'Y',
                      2 => 'F',
                      3 => 'M',
                      4 => 'A',
                      5 => 'M',
                      6 => 'I',
                      7 => 'I',
                      8 => 'A',
                      9 => 'S',
                      10 => 'O',
                      11 => 'N',
                      12 => 'D',
                    );
            case i18n_Locale::TYPE_WIDE:
                return array (
                      1 => 'Yanvar',
                      2 => 'Fevral',
                      3 => 'Mart',
                      4 => 'Aprel',
                      5 => 'May',
                      6 => 'Iyun',
                      7 => 'Iyul',
                      8 => 'Avgust',
                      9 => 'Sentabr',
                      10 => 'Oktabr',
                      11 => 'Noyabr',
                      12 => 'Dekabr',
                    );
        }
    }

        public function weekDays($type = i18n_Locale::TYPE_WIDE): array{
        switch($type) {
            case i18n_Locale::TYPE_ABBREVIATED:
                return array (
                      0 => 'Yak',
                      1 => 'Dush',
                      2 => 'Sesh',
                      3 => 'Chor',
                      4 => 'Pay',
                      5 => 'Jum',
                      6 => 'Shan',
                    );
            case i18n_Locale::TYPE_NARROW:
                return array (
                      0 => 'Y',
                      1 => 'D',
                      2 => 'S',
                      3 => 'C',
                      4 => 'P',
                      5 => 'J',
                      6 => 'S',
                    );
            case i18n_Locale::TYPE_WIDE:
                return array (
                      0 => 'Yakshanba',
                      1 => 'Dushanba',
                      2 => 'Seshanba',
                      3 => 'Chorshanba',
                      4 => 'Payshanba',
                      5 => 'Juma',
                      6 => 'Shanba',
                    );
        }
    }

        public function intervals(): array{
                    return array (
              'year' => '{n, plural, one {# yil} other {# yil}}',
              'month' => '{n, plural, one {# oy} other {# oy}}',
              'week' => '{n, plural, one {# hafta} other {# hafta}}',
              'day' => '{n, plural, one {# kun} other {# kun}}',
              'hour' => '{n, plural, one {# soat} other {# soat}}',
              'minute' => '{n, plural, one {# daq.} other {# daq.}}',
              'second' => '{n, plural, one {# son.} other {# son.}}',
              'millisecond' => '{n, plural, one {# ms} other {# ms}}',
              'microsecond' => '{n, plural, one {# mks} other {# mks}}',
              'nanosecond' => '{n, plural, one {# ns} other {# ns}}',
            );
                }

        public function currencies(): array{
                   return require __DIR__ . DIRECTORY_SEPARATOR . 'Currencies.php';
                }

        public function languages(): array{
                   return require __DIR__ . DIRECTORY_SEPARATOR . 'Languages.php';
                }

        public function territories(): array{
                   return require __DIR__ . DIRECTORY_SEPARATOR . 'Territories.php';
                }
}
