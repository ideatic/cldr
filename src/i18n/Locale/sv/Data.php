<?php

declare(strict_types=1);

/**
 * Locale data for 'sv'.
 * Created: Tue, 01 Nov 2022 12:00:33 +0100
 *
 * This file is automatically generated using the data from the Unicode Common Locale Data Repository.
 *
 * Copyright © 1991-2007 Unicode, Inc. All rights reserved.
 * Distributed under the Terms of Use in http://www.unicode.org/copyright.html.
 */
class i18n_Locale_sv_Data extends i18n_Locale
{
    public function __construct()
    {
        // Version 42
        $this->orientation = 'ltr';
        $this->decimalSeparator = ',';
        $this->groupSeparator = ' ';
        $this->currencyFormat = '%f ¤';
        $this->currencyNegativeFormat = '%f ¤';
        $this->language = 'sv';
        $this->locale = 'sv';
        $this->firstDayWeek = 1;
        $this->longDate = 'j F Y';
        $this->shortDate = 'j M Y';
        $this->longTime = 'H:i:s';
        $this->shortTime = 'H:i';
        $this->dateTime = '%date% %time%';
        $this->amString = 'fm';
        $this->pmString = 'em';
        $this->nameEnglish = 'Swedish';
        $this->nameNative = 'Svenska';
    }

    public function months($type = i18n_Locale::TYPE_WIDE): array
    {
        switch ($type) {
            case i18n_Locale::TYPE_ABBREVIATED:
                return [
                    1  => 'Jan.',
                    2  => 'Feb.',
                    3  => 'Mars',
                    4  => 'Apr.',
                    5  => 'Maj',
                    6  => 'Juni',
                    7  => 'Juli',
                    8  => 'Aug.',
                    9  => 'Sep.',
                    10 => 'Okt.',
                    11 => 'Nov.',
                    12 => 'Dec.',
                ];
            case i18n_Locale::TYPE_NARROW:
                return [
                    1  => 'J',
                    2  => 'F',
                    3  => 'M',
                    4  => 'A',
                    5  => 'M',
                    6  => 'J',
                    7  => 'J',
                    8  => 'A',
                    9  => 'S',
                    10 => 'O',
                    11 => 'N',
                    12 => 'D',
                ];
            case i18n_Locale::TYPE_WIDE:
                return [
                    1  => 'Januari',
                    2  => 'Februari',
                    3  => 'Mars',
                    4  => 'April',
                    5  => 'Maj',
                    6  => 'Juni',
                    7  => 'Juli',
                    8  => 'Augusti',
                    9  => 'September',
                    10 => 'Oktober',
                    11 => 'November',
                    12 => 'December',
                ];
        }
    }

    public function weekDays($type = i18n_Locale::TYPE_WIDE): array
    {
        switch ($type) {
            case i18n_Locale::TYPE_ABBREVIATED:
                return [
                    0 => 'Sön',
                    1 => 'Mån',
                    2 => 'Tis',
                    3 => 'Ons',
                    4 => 'Tors',
                    5 => 'Fre',
                    6 => 'Lör',
                ];
            case i18n_Locale::TYPE_NARROW:
                return [
                    0 => 'S',
                    1 => 'M',
                    2 => 'T',
                    3 => 'O',
                    4 => 'T',
                    5 => 'F',
                    6 => 'L',
                ];
            case i18n_Locale::TYPE_WIDE:
                return [
                    0 => 'Söndag',
                    1 => 'Måndag',
                    2 => 'Tisdag',
                    3 => 'Onsdag',
                    4 => 'Torsdag',
                    5 => 'Fredag',
                    6 => 'Lördag',
                ];
        }
    }

    public function intervals(): array
    {
        return [
            'year'        => '{n, plural, one {# år} one {# års} other {# år} other {# års}}',
            'month'       => '{n, plural, one {# månad} one {# månads} other {# månader} other {# månaders}}',
            'week'        => '{n, plural, one {# vecka} one {# veckas} other {# veckor} other {# veckors}}',
            'day'         => '{n, plural, one {# dygn} one {# dygns} other {# dygn} other {# dygns}}',
            'hour'        => '{n, plural, one {# tim} other {# tim}}',
            'minute'      => '{n, plural, one {# min} other {# min}}',
            'second'      => '{n, plural, one {# s} other {# s}}',
            'millisecond' => '{n, plural, one {# ms} other {# ms}}',
            'microsecond' => '{n, plural, one {# μs} other {# μs}}',
            'nanosecond'  => '{n, plural, one {# ns} other {# ns}}',
        ];
    }

    public function currencies(): array
    {
        return require __DIR__ . DIRECTORY_SEPARATOR . 'Currencies.php';
    }

    public function languages(): array
    {
        return require __DIR__ . DIRECTORY_SEPARATOR . 'Languages.php';
    }

    public function territories(): array
    {
        return require __DIR__ . DIRECTORY_SEPARATOR . 'Territories.php';
    }
}
