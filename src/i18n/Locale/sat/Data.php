<?php
declare(strict_types=1);

/**
 * Locale data for 'sat'.
 * Created: Sun, 22 Nov 2020 20:21:48 +0100
 *
 * This file is automatically generated using the data from the Unicode Common Locale Data Repository.
 *
 * Copyright © 1991-2007 Unicode, Inc. All rights reserved.
 * Distributed under the Terms of Use in http://www.unicode.org/copyright.html.
 */
class i18n_Locale_sat_Data extends i18n_Locale
{
    public function __construct() {
        // Version 38
        $this->orientation = 'ltr';
        $this->decimalSeparator = '.';
        $this->groupSeparator = ',';
        $this->currencyFormat = '¤%f';
        $this->currencyNegativeFormat = '(¤%f)';
        $this->language = 'sat';
        $this->locale = 'sat';
        $this->firstDayWeek = 1;
        $this->longDate = 'j F Y';
        $this->shortDate = 'j M Y';
        $this->longTime = 'g:i:s A';
        $this->shortTime = 'g:i A';
        $this->dateTime = '%date% %time%';
        $this->amString = 'ᱥᱮᱛᱟᱜ';
        $this->pmString = 'ᱧᱤᱫᱟᱹ';
        $this->nameEnglish = 'English';
        $this->nameNative = 'English';
    }
        
    public function months($type = i18n_Locale::TYPE_WIDE): array{
        switch($type) {
            case i18n_Locale::TYPE_ABBREVIATED:
                return array (
                      1 => 'ᱡᱟᱱ',
                      2 => 'ᱯᱷᱟ',
                      3 => 'ᱢᱟᱨ',
                      4 => 'ᱟᱯᱨ',
                      5 => 'ᱢᱮ',
                      6 => 'ᱡᱩᱱ',
                      7 => 'ᱡᱩᱞ',
                      8 => 'ᱟᱜᱟ',
                      9 => 'ᱥᱮᱯ',
                      10 => 'ᱚᱠᱴ',
                      11 => 'ᱱᱟᱣ',
                      12 => 'ᱫᱤᱥ',
                    );
            case i18n_Locale::TYPE_NARROW:
                return array (
                      1 => 'ᱡ',
                      2 => 'ᱯ',
                      3 => 'ᱢ',
                      4 => 'ᱟ',
                      5 => 'ᱢ',
                      6 => 'ᱡ',
                      7 => 'ᱡ',
                      8 => 'ᱟ',
                      9 => 'ᱥ',
                      10 => 'ᱚ',
                      11 => 'ᱱ',
                      12 => 'ᱫ',
                    );
            case i18n_Locale::TYPE_WIDE:
                return array (
                      1 => 'ᱡᱟᱱᱣᱟᱨᱤ',
                      2 => 'ᱯᱷᱟᱨᱣᱟᱨᱤ',
                      3 => 'ᱢᱟᱨᱪ',
                      4 => 'ᱟᱯᱨᱮᱞ',
                      5 => 'ᱢᱮ',
                      6 => 'ᱡᱩᱱ',
                      7 => 'ᱡᱩᱞᱟᱭ',
                      8 => 'ᱟᱜᱟᱥᱛ',
                      9 => 'ᱥᱮᱯᱴᱮᱢᱵᱟᱨ',
                      10 => 'ᱚᱠᱴᱚᱵᱟᱨ',
                      11 => 'ᱱᱟᱣᱟᱢᱵᱟᱨ',
                      12 => 'ᱫᱤᱥᱟᱢᱵᱟᱨ',
                    );
        }
    }

        public function weekDays($type = i18n_Locale::TYPE_WIDE): array{
        switch($type) {
            case i18n_Locale::TYPE_ABBREVIATED:
                return array (
                      0 => 'ᱥᱤᱸ',
                      1 => 'ᱚᱛ',
                      2 => 'ᱵᱟ',
                      3 => 'ᱥᱟᱹ',
                      4 => 'ᱥᱟᱹᱨ',
                      5 => 'ᱡᱟᱹ',
                      6 => 'ᱧᱩ',
                    );
            case i18n_Locale::TYPE_NARROW:
                return array (
                      0 => 'ᱥ',
                      1 => 'ᱚ',
                      2 => 'ᱵ',
                      3 => 'ᱥ',
                      4 => 'ᱥ',
                      5 => 'ᱡ',
                      6 => 'ᱧ',
                    );
            case i18n_Locale::TYPE_WIDE:
                return array (
                      0 => 'ᱥᱤᱸᱜᱮ',
                      1 => 'ᱚᱛᱮ',
                      2 => 'ᱵᱟᱞᱮ',
                      3 => 'ᱥᱟᱹᱜᱩᱱ',
                      4 => 'ᱥᱟᱹᱨᱫᱤ',
                      5 => 'ᱡᱟᱹᱨᱩᱢ',
                      6 => 'ᱧᱩᱦᱩᱢ',
                    );
        }
    }

        public function intervals(): array{
                    return array (
              'year' => '{n, plural, one {# year} other {# years}}',
              'month' => '{n, plural, one {# month} other {# months}}',
              'week' => '{n, plural, one {# week} other {# weeks}}',
              'day' => '{n, plural, one {# day} other {# days}}',
              'hour' => '{n, plural, one {# hr} other {# hr}}',
              'minute' => '{n, plural, one {# min} other {# min}}',
              'second' => '{n, plural, one {# sec} other {# sec}}',
              'millisecond' => '{n, plural, one {# ms} other {# ms}}',
              'microsecond' => '{n, plural, one {# µs} other {# µs}}',
              'nanosecond' => '{n, plural, one {# ns} other {# ns}}',
            );
                }

        public function currencies(): array{
                   return require __DIR__ . DIRECTORY_SEPARATOR . 'Currencies.php';
                }

        public function languages(): array{
                   return require __DIR__ . DIRECTORY_SEPARATOR . 'Languages.php';
                }

        public function territories(): array{
                   return require __DIR__ . DIRECTORY_SEPARATOR . 'Territories.php';
                }
}
