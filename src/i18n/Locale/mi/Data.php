<?php

declare(strict_types=1);

/**
 * Locale data for 'mi'.
 * Created: Tue, 01 Nov 2022 12:00:28 +0100
 *
 * This file is automatically generated using the data from the Unicode Common Locale Data Repository.
 *
 * Copyright © 1991-2007 Unicode, Inc. All rights reserved.
 * Distributed under the Terms of Use in http://www.unicode.org/copyright.html.
 */
class i18n_Locale_mi_Data extends i18n_Locale
{
    public function __construct()
    {
        // Version 42
        $this->orientation = 'ltr';
        $this->decimalSeparator = '.';
        $this->groupSeparator = ',';
        $this->currencyFormat = '¤ %f';
        $this->currencyNegativeFormat = '¤ %f';
        $this->language = 'mi';
        $this->locale = 'mi';
        $this->firstDayWeek = 1;
        $this->longDate = 'j F Y';
        $this->shortDate = 'j M Y';
        $this->longTime = 'g:i:s A';
        $this->shortTime = 'g:i A';
        $this->dateTime = '%date% %time%';
        $this->amString = 'AM';
        $this->pmString = 'PM';
        $this->nameEnglish = 'Māori';
        $this->nameNative = 'Māori';
    }

    public function months($type = i18n_Locale::TYPE_WIDE): array
    {
        switch ($type) {
            case i18n_Locale::TYPE_ABBREVIATED:
                return [
                    1  => 'Hān',
                    2  => 'Pēp',
                    3  => 'Māe',
                    4  => 'Āpe',
                    5  => 'Mei',
                    6  => 'Hune',
                    7  => 'Hūr',
                    8  => 'Āku',
                    9  => 'Hep',
                    10 => 'Oke',
                    11 => 'Noem',
                    12 => 'Tīhe',
                ];
            case i18n_Locale::TYPE_NARROW:
                return [
                    1  => 'H',
                    2  => 'P',
                    3  => 'M',
                    4  => 'Ā',
                    5  => 'M',
                    6  => 'H',
                    7  => 'H',
                    8  => 'Ā',
                    9  => 'H',
                    10 => 'O',
                    11 => 'N',
                    12 => 'T',
                ];
            case i18n_Locale::TYPE_WIDE:
                return [
                    1  => 'Hānuere',
                    2  => 'Pēpuere',
                    3  => 'Māehe',
                    4  => 'Āpereira',
                    5  => 'Mei',
                    6  => 'Hune',
                    7  => 'Hūrae',
                    8  => 'Ākuhata',
                    9  => 'Hepetema',
                    10 => 'Oketopa',
                    11 => 'Noema',
                    12 => 'Tīhema',
                ];
        }
    }

    public function weekDays($type = i18n_Locale::TYPE_WIDE): array
    {
        switch ($type) {
            case i18n_Locale::TYPE_ABBREVIATED:
                return [
                    0 => 'Rāt',
                    1 => 'Mane',
                    2 => 'Tūr',
                    3 => 'Wene',
                    4 => 'Tāit',
                    5 => 'Par',
                    6 => 'Rāh',
                ];
            case i18n_Locale::TYPE_NARROW:
                return [
                    0 => 'Rt',
                    1 => 'M',
                    2 => 'T',
                    3 => 'E',
                    4 => 'T',
                    5 => 'P',
                    6 => 'Rh',
                ];
            case i18n_Locale::TYPE_WIDE:
                return [
                    0 => 'Rātapu',
                    1 => 'Mane',
                    2 => 'Tūrei',
                    3 => 'Wenerei',
                    4 => 'Tāite',
                    5 => 'Paraire',
                    6 => 'Rāhoroi',
                ];
        }
    }

    public function intervals(): array
    {
        return [
            'year'        => '{n, plural, one {# year} other {# years}}',
            'month'       => '{n, plural, one {# month} other {# months}}',
            'week'        => '{n, plural, one {# week} other {# weeks}}',
            'day'         => '{n, plural, one {# day} other {# days}}',
            'hour'        => '{n, plural, one {# hr} other {# hr}}',
            'minute'      => '{n, plural, one {# min} other {# min}}',
            'second'      => '{n, plural, one {# sec} other {# sec}}',
            'millisecond' => '{n, plural, one {# ms} other {# ms}}',
            'microsecond' => '{n, plural, one {# μs} other {# μs}}',
            'nanosecond'  => '{n, plural, one {# ns} other {# ns}}',
        ];
    }

    public function currencies(): array
    {
        return require __DIR__ . DIRECTORY_SEPARATOR . 'Currencies.php';
    }

    public function languages(): array
    {
        return require __DIR__ . DIRECTORY_SEPARATOR . 'Languages.php';
    }

    public function territories(): array
    {
        return require __DIR__ . DIRECTORY_SEPARATOR . 'Territories.php';
    }
}
