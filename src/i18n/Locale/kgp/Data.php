<?php

declare(strict_types=1);

/**
 * Locale data for 'kgp'.
 * Created: Tue, 01 Nov 2022 12:00:26 +0100
 *
 * This file is automatically generated using the data from the Unicode Common Locale Data Repository.
 *
 * Copyright © 1991-2007 Unicode, Inc. All rights reserved.
 * Distributed under the Terms of Use in http://www.unicode.org/copyright.html.
 */
class i18n_Locale_kgp_Data extends i18n_Locale
{
    public function __construct()
    {
        // Version 42
        $this->orientation = 'ltr';
        $this->decimalSeparator = ',';
        $this->groupSeparator = '.';
        $this->currencyFormat = '¤ %f';
        $this->currencyNegativeFormat = '¤ %f';
        $this->language = 'kgp';
        $this->locale = 'kgp';
        $this->firstDayWeek = 1;
        $this->longDate = 'j \\n\\e F, Y';
        $this->shortDate = 'j \\n\\e M, Y';
        $this->longTime = 'H:i:s';
        $this->shortTime = 'H:i';
        $this->dateTime = '%date% %time%';
        $this->amString = 'AM';
        $this->pmString = 'PM';
        $this->nameEnglish = 'English';
        $this->nameNative = 'English';
    }

    public function months($type = i18n_Locale::TYPE_WIDE): array
    {
        switch ($type) {
            case i18n_Locale::TYPE_ABBREVIATED:
                return [
                    1  => '1Ky.',
                    2  => '2Ky.',
                    3  => '3Ky.',
                    4  => '4Ky.',
                    5  => '5Ky.',
                    6  => '6Ky.',
                    7  => '7Ky.',
                    8  => '8Ky.',
                    9  => '9Ky.',
                    10 => '10Ky.',
                    11 => '11Ky.',
                    12 => '12Ky.',
                ];
            case i18n_Locale::TYPE_NARROW:
                return [
                    1  => '1K',
                    2  => '2K',
                    3  => '3K',
                    4  => '4K',
                    5  => '5K',
                    6  => '6K',
                    7  => '7K',
                    8  => '8K',
                    9  => '9K',
                    10 => '10K',
                    11 => '11K',
                    12 => '12K',
                ];
            case i18n_Locale::TYPE_WIDE:
                return [
                    1  => '1-Kysã',
                    2  => '2-Kysã',
                    3  => '3-Kysã',
                    4  => '4-Kysã',
                    5  => '5-Kysã',
                    6  => '6-Kysã',
                    7  => '7-Kysã',
                    8  => '8-Kysã',
                    9  => '9-Kysã',
                    10 => '10-Kysã',
                    11 => '11-Kysã',
                    12 => '12-Kysã',
                ];
        }
    }

    public function weekDays($type = i18n_Locale::TYPE_WIDE): array
    {
        switch ($type) {
            case i18n_Locale::TYPE_ABBREVIATED:
                return [
                    0 => 'Num.',
                    1 => 'Pir.',
                    2 => 'Rég.',
                    3 => 'Tẽg.',
                    4 => 'Vẽn.',
                    5 => 'Pén.',
                    6 => 'Sav.',
                ];
            case i18n_Locale::TYPE_NARROW:
                return [
                    0 => 'N.',
                    1 => 'P.',
                    2 => 'R.',
                    3 => 'T.',
                    4 => 'V.',
                    5 => 'P.',
                    6 => 'S.',
                ];
            case i18n_Locale::TYPE_WIDE:
                return [
                    0 => 'Numĩggu',
                    1 => 'Pir-kurã-há',
                    2 => 'Régre-kurã-há',
                    3 => 'Tẽgtũ-kurã-há',
                    4 => 'Vẽnhkãgra-kurã-há',
                    5 => 'Pénkar-kurã-há',
                    6 => 'Savnu',
                ];
        }
    }

    public function intervals(): array
    {
        return [
            'year'        => '{n, plural, one {# prỹg} other {# prỹg ag}}',
            'month'       => '{n, plural, one {kysã #} other {kysã ag #}}',
            'week'        => '{n, plural, one {# simỹnỹ} other {# simỹnỹ ag}}',
            'day'         => '{n, plural, one {kurã #} other {kurã #}}',
            'second'      => '{n, plural, one {# sig} other {# sig}}',
            'hour'        => '{n, plural, one {# hr} other {# hr}}',
            'minute'      => '{n, plural, one {# min} other {# min}}',
            'millisecond' => '{n, plural, one {# ms} other {# ms}}',
            'microsecond' => '{n, plural, one {# μs} other {# μs}}',
            'nanosecond'  => '{n, plural, one {# ns} other {# ns}}',
        ];
    }

    public function currencies(): array
    {
        return require __DIR__ . DIRECTORY_SEPARATOR . 'Currencies.php';
    }

    public function languages(): array
    {
        return require __DIR__ . DIRECTORY_SEPARATOR . 'Languages.php';
    }

    public function territories(): array
    {
        return require __DIR__ . DIRECTORY_SEPARATOR . 'Territories.php';
    }
}
