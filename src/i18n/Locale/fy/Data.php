<?php
declare(strict_types=1);

/**
 * Locale data for 'fy'.
 * Created: Sun, 22 Nov 2020 20:20:59 +0100
 *
 * This file is automatically generated using the data from the Unicode Common Locale Data Repository.
 *
 * Copyright © 1991-2007 Unicode, Inc. All rights reserved.
 * Distributed under the Terms of Use in http://www.unicode.org/copyright.html.
 */
class i18n_Locale_fy_Data extends i18n_Locale
{
    public function __construct() {
        // Version 38
        $this->orientation = 'ltr';
        $this->decimalSeparator = ',';
        $this->groupSeparator = '.';
        $this->currencyFormat = '¤ %f';
        $this->currencyNegativeFormat = '(¤ %f)';
        $this->language = 'fy';
        $this->locale = 'fy';
        $this->firstDayWeek = 1;
        $this->longDate = 'j F Y';
        $this->shortDate = 'j M Y';
        $this->longTime = 'H:i:s';
        $this->shortTime = 'H:i';
        $this->dateTime = '%date% %time%';
        $this->amString = 'AM';
        $this->pmString = 'PM';
        $this->nameEnglish = 'Western Frisian';
        $this->nameNative = 'Frysk';
    }
        
    public function months($type = i18n_Locale::TYPE_WIDE): array{
        switch($type) {
            case i18n_Locale::TYPE_ABBREVIATED:
                return array (
                      1 => 'Jan',
                      2 => 'Feb',
                      3 => 'Mrt',
                      4 => 'Apr',
                      5 => 'Mai',
                      6 => 'Jun',
                      7 => 'Jul',
                      8 => 'Aug',
                      9 => 'Sep',
                      10 => 'Okt',
                      11 => 'Nov',
                      12 => 'Des',
                    );
            case i18n_Locale::TYPE_NARROW:
                return array (
                      1 => 'J',
                      2 => 'F',
                      3 => 'M',
                      4 => 'A',
                      5 => 'M',
                      6 => 'J',
                      7 => 'J',
                      8 => 'A',
                      9 => 'S',
                      10 => 'O',
                      11 => 'N',
                      12 => 'D',
                    );
            case i18n_Locale::TYPE_WIDE:
                return array (
                      1 => 'Jannewaris',
                      2 => 'Febrewaris',
                      3 => 'Maart',
                      4 => 'April',
                      5 => 'Maaie',
                      6 => 'Juny',
                      7 => 'July',
                      8 => 'Augustus',
                      9 => 'Septimber',
                      10 => 'Oktober',
                      11 => 'Novimber',
                      12 => 'Desimber',
                    );
        }
    }

        public function weekDays($type = i18n_Locale::TYPE_WIDE): array{
        switch($type) {
            case i18n_Locale::TYPE_ABBREVIATED:
                return array (
                      0 => 'Si',
                      1 => 'Mo',
                      2 => 'Ti',
                      3 => 'Wo',
                      4 => 'To',
                      5 => 'Fr',
                      6 => 'So',
                    );
            case i18n_Locale::TYPE_NARROW:
                return array (
                      0 => 'S',
                      1 => 'M',
                      2 => 'T',
                      3 => 'W',
                      4 => 'T',
                      5 => 'F',
                      6 => 'S',
                    );
            case i18n_Locale::TYPE_WIDE:
                return array (
                      0 => 'Snein',
                      1 => 'Moandei',
                      2 => 'Tiisdei',
                      3 => 'Woansdei',
                      4 => 'Tongersdei',
                      5 => 'Freed',
                      6 => 'Sneon',
                    );
        }
    }

        public function intervals(): array{
                    return array (
              'year' => '{n, plural, one {# jier} other {# jier}}',
              'month' => '{n, plural, one {# moanne} other {# moanneen}}',
              'week' => '{n, plural, one {# wike} other {# wiken}}',
              'day' => '{n, plural, one {# dei} other {# deien}}',
              'hour' => '{n, plural, one {# oere} other {# oere}}',
              'minute' => '{n, plural, one {# min} other {# min}}',
              'second' => '{n, plural, one {# sek.} other {# sek.}}',
              'millisecond' => '{n, plural, one {# ms} other {# ms}}',
              'microsecond' => '{n, plural, one {# µs} other {# µs}}',
              'nanosecond' => '{n, plural, one {# ns} other {# ns}}',
            );
                }

        public function currencies(): array{
                   return require __DIR__ . DIRECTORY_SEPARATOR . 'Currencies.php';
                }

        public function languages(): array{
                   return require __DIR__ . DIRECTORY_SEPARATOR . 'Languages.php';
                }

        public function territories(): array{
                   return require __DIR__ . DIRECTORY_SEPARATOR . 'Territories.php';
                }
}
